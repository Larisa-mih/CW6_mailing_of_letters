# Generated by Django 5.0.6 on 2024-06-05 13:29

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=20, verbose_name="Имя")),
                ("last_name", models.CharField(max_length=20, verbose_name="Фамилия")),
                (
                    "patronymic",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Отчество"
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="Электронный адрес"),
                ),
                (
                    "comment",
                    models.TextField(blank=True, null=True, verbose_name="Комментарий"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Владелец",
                    ),
                ),
            ],
            options={
                "verbose_name": "Клиент",
                "verbose_name_plural": "Клиенты",
            },
        ),
        migrations.CreateModel(
            name="Mail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=100, verbose_name="Тема рассылки"),
                ),
                (
                    "mail_datetime",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Дата создания"
                    ),
                ),
                (
                    "mail_datetime_last",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        null=True,
                        verbose_name="Следующая отправка",
                    ),
                ),
                (
                    "mail_periodicity",
                    models.CharField(
                        choices=[
                            ("Раз в день", "Раз в день"),
                            ("Раз в неделю", "Раз в неделю"),
                            ("Раз в месяц", "Раз в месяц"),
                        ],
                        verbose_name="Периодичность",
                    ),
                ),
                (
                    "mail_status",
                    models.CharField(
                        choices=[
                            ("Создана", "Создана"),
                            ("Запущена", "Запущена"),
                            ("Завершена", "Завершена"),
                        ],
                        default="Создана",
                        verbose_name="Статус отправки",
                    ),
                ),
                (
                    "mail_active",
                    models.BooleanField(
                        default=True, verbose_name="Активность рассылки"
                    ),
                ),
                (
                    "client",
                    models.ManyToManyField(
                        related_name="client",
                        to="newsletter.client",
                        verbose_name="Клиент",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Владелец",
                    ),
                ),
            ],
            options={
                "verbose_name": "Рассылка",
                "verbose_name_plural": "Рассылки",
                "permissions": [
                    ("set_deactivate", "Can deactivate mail"),
                    ("view_all_mail", "Can view all mail"),
                ],
            },
        ),
        migrations.CreateModel(
            name="LogAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attempt_datetime",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата и время последней попытки"
                    ),
                ),
                (
                    "attempt_status",
                    models.CharField(
                        choices=[("Успешно", "Успешно"), ("Безуспешно", "Безуспешно")],
                        max_length=50,
                        verbose_name="Cтатус попытки",
                    ),
                ),
                (
                    "server_response",
                    models.CharField(
                        blank=True, null=True, verbose_name="Ответ почтового сервера"
                    ),
                ),
                (
                    "mail",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="newsletter.mail",
                        verbose_name="Рассылка",
                    ),
                ),
            ],
            options={
                "verbose_name": "Попытка рассылки",
                "verbose_name_plural": "Попытки рассылки",
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "message_title",
                    models.CharField(max_length=100, verbose_name="Тема письма"),
                ),
                ("message_content", models.TextField(verbose_name="Содержание")),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Владелец",
                    ),
                ),
            ],
            options={
                "verbose_name": "Сообщение для рассылки",
                "verbose_name_plural": "Сообщения для рассылки",
            },
        ),
        migrations.AddField(
            model_name="mail",
            name="message",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="newsletter.message",
                verbose_name="Сообщение",
            ),
        ),
    ]
